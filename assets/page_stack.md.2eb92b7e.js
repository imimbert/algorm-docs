import{_ as s,o as a,c as n,S as l}from"./chunks/framework.971bc24b.js";const A=JSON.parse('{"title":"栈 stack","description":"","frontmatter":{"title":"栈 stack"},"headers":[],"relativePath":"page/stack.md","filePath":"page/stack.md","lastUpdated":1711281973000}'),p={name:"page/stack.md"},o=l(`<h1 id="栈-stack" tabindex="-1">栈 stack <a class="header-anchor" href="#栈-stack" aria-label="Permalink to &quot;栈 stack&quot;">​</a></h1><h2 id="创建栈" tabindex="-1">创建栈 <a class="header-anchor" href="#创建栈" aria-label="Permalink to &quot;创建栈&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> stack_t </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> algorm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stack</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="在最后插入元素" tabindex="-1">在最后插入元素 <a class="header-anchor" href="#在最后插入元素" aria-label="Permalink to &quot;在最后插入元素&quot;">​</a></h2><p>例如插入1</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>stack 变为</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">stack { arr: [ 1, 2, 3, 1 ], type: &#39;stack&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="在最前插入元素" tabindex="-1">在最前插入元素 <a class="header-anchor" href="#在最前插入元素" aria-label="Permalink to &quot;在最前插入元素&quot;">​</a></h2><p>例如插入4</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emplace</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>stack 变为</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">stack { arr: [ 4, 1, 2, 3, 1 ], type: &#39;stack&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="弹出最后一个元素" tabindex="-1">弹出最后一个元素 <a class="header-anchor" href="#弹出最后一个元素" aria-label="Permalink to &quot;弹出最后一个元素&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#BABED8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>stack变为</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">stack { arr: [ 4, 1, 2, 3 ], type: &#39;stack&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="交换两个栈的内容" tabindex="-1">交换两个栈的内容 <a class="header-anchor" href="#交换两个栈的内容" aria-label="Permalink to &quot;交换两个栈的内容&quot;">​</a></h2><p>再创建一个栈</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> stack_t2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> algorm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stack</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>则</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">swap</span><span style="color:#BABED8;">(stack_t2)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>可以让两个栈的内容交换</p><h2 id="清除栈" tabindex="-1">清除栈 <a class="header-anchor" href="#清除栈" aria-label="Permalink to &quot;清除栈&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#BABED8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>stack变为</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">stack { arr: [], type: &#39;stack&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此时如果输出 <code>stack_t.size</code>,则输出0 如果调用 <code>stack_t.empty()</code>,则输出\`true</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> algorm </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">algorm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// stack </span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> stack_t </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> algorm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stack</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">])</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> stack_t2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> algorm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stack</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">])</span></span>
<span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 在最后插入</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stcak_t.push(1): </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stcak_t.top(): </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">top</span><span style="color:#BABED8;">()) </span><span style="color:#676E95;font-style:italic;">//第一个元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emplace</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">//在最前插入</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stcak_t.emplace(4): </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">// 弹出最后一个元素</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stack_t.pop(): </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">//清除</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stack_t.clear(): </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">stcak_t.size(): </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">size</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">stack_t.empty()</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">empty</span><span style="color:#BABED8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">swap</span><span style="color:#BABED8;">(stack_t2)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 交换</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stack_t.swap(stack_t2): </span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">  stcak_t: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">  stcak_t2: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">stack_t2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">\\n\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>输出</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">stcak_t.push(1</span><span style="color:#BABED8;">):  stack </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">arr:</span><span style="color:#BABED8;"> [ </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">],</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">type:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">stack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#82AAFF;">stcak_t.top</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;">:  1</span></span>
<span class="line"><span style="color:#FFCB6B;">stcak_t.emplace(4</span><span style="color:#BABED8;">):  stack </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">arr:</span><span style="color:#BABED8;"> [ </span><span style="color:#F78C6C;">4</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">],</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">type:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">stack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#82AAFF;">stack_t.pop</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;">:  stack </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">arr:</span><span style="color:#BABED8;"> [ </span><span style="color:#F78C6C;">4</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">],</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">type:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">stack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#82AAFF;">stack_t.clear</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;">:  stack </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">arr:</span><span style="color:#BABED8;"> [], type: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">stack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#82AAFF;">stcak_t.size</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;">:  0 </span></span>
<span class="line"><span style="color:#82AAFF;">stack_t.empty</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> true</span></span>
<span class="line"><span style="color:#BABED8;">stack_t.swap</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">stack_t2</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">: </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">stcak_t:</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">stack</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">{</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">arr:</span><span style="color:#BABED8;"> [ </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">],</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">type:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">stack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">}</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#FFCB6B;">stcak_t2:</span><span style="color:#BABED8;">  </span><span style="color:#C3E88D;">stack</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">{</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">arr:</span><span style="color:#BABED8;"> [], type: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">stack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,32),e=[o];function t(c,r,y,D,i,F){return a(),n("div",null,e)}const E=s(p,[["render",t]]);export{A as __pageData,E as default};
